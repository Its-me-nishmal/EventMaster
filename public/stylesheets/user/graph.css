
/* Result - total graph  */
     /**
 * 1. The `reverse` animation direction plays the animation backwards
 *    which makes it start at the stroke offset 100 which means displaying
 *    no stroke at all and animating it to the value defined in the SVG
 *    via the inline `stroke-dashoffset` attribute.
 * 2. Rotate by -90 degree to make the starting point of the
 *    stroke the top of the circle.
 * 3. Using CSS transforms on SVG elements is not supported by Internet Explorer
 *    and Edge, use the transform attribute directly on the SVG element as a
 * .  workaround (https://markus.oberlehner.net/blog/pure-css-animated-svg-circle-chart/#part-4-internet-explorer-strikes-back).
 */
 .circle-chart__circle {
  animation: circle-chart-fill 2s reverse;
  /* 1 */
  transform: rotate(-90deg);
  /* 2, 3 */
  transform-origin: center;
 
  /* 4 */
}

/**
* 1. Rotate by -90 degree to make the starting point of the
*    stroke the top of the circle.
* 2. Scaling mirrors the circle to make the stroke move right
*    to mark a positive chart value.
* 3. Using CSS transforms on SVG elements is not supported by Internet Explorer
*    and Edge, use the transform attribute directly on the SVG element as a
* .  workaround (https://markus.oberlehner.net/blog/pure-css-animated-svg-circle-chart/#part-4-internet-explorer-strikes-back).
*/
.circle-chart__circle--negative {
  transform: rotate(-90deg) scale(1, -1);
  /* 1, 2, 3 */
}

.circle-chart__info {
  animation: circle-chart-appear 2s forwards;
  opacity: 0;
  transform: translateY(0.3em);
}

@keyframes circle-chart-fill {
  to {
      stroke-dasharray: 0 100;
  }
}

@keyframes circle-chart-appear {
  to {
      opacity: 1;
      transform: translateY(0);
  }
}

/* Layout styles only, not needed for functionality */


.grid {
  display: grid;
  grid-column-gap: 1em;
  grid-row-gap: 1em;
  grid-template-columns: repeat(1, 1fr);
}

@media (min-width: 31em) {
  .grid {
      grid-template-columns: repeat(2, 1fr);
  }
}


/* Result  - Rooudent */
.pie-chart {
 
  position: relative;
  width: 150px;
  min-height: 150px;
  background-color: yellowgreen;
  border-radius: 100%;
  margin-top: -5px;
 
}

.pie-chart figcaption {
  position: absolute;
  bottom: 1em;
  right: 1em;
  font-size: smaller;
  text-align: right;
}

.pie-chart span:after {
  display: inline-block;
  content: "";
  width: 0.8em;
  height: 0.8em;
  margin-left: 0.4em;
  height: 0.8em;
  border-radius: 0.2em;
  background: currentColor;
}


/*  chart new */



#legend-example-3 {
  display: flex;
  flex-direction: row;
  gap: 40px;
  min-width: 100%;
  margin: 0 auto;
  height: 160px;

}
#legend-example-3 .column {
  height: 160px;
  width: 100%;
  min-width: 500px;
  margin: 0 auto;
}
#legend-example-3 .legend {
  padding: 0;
  width: 150px;
  padding-left: 10px;
  
}
#legend-example-3 .legend li { 
  margin: 0;
  padding: 0;
  font-size: 14px;
 
}
.SessionBaiseChart span{
  font-size: 12px;
  -webkit-transform: rotate(270deg);   
-moz-transform: rotate(270deg);
-ms-transform: rotate(270deg);
-o-transform: rotate(270deg);
transform: rotate(270deg);
overflow-wrap: normal;
margin-top: 10px;

}

#motion-effect-example-3 td .data {
  transition-duration: 0.6s;
  transform: scale(0);
}
#motion-effect-example-3 td:hover .data {
  transform: scale(1);
}


#animations-example-3 tbody {
  overflow-y: hidden; /* remove this to see how it works */
}
#animations-example-3 tbody th {
  background-color: #fff;
  z-index: 1;
}
#animations-example-3 tbody td {
  animation: moving-bars 4s linear infinite;
}
@keyframes moving-bars {
  0%  { transform: translateY( 100% ); }
  15% { transform: translateY( 0 ); }
}



